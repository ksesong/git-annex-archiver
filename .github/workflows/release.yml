name: release


permissions:
  contents: write

on:
  push:
    branches:
      - main

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  extract-version:
    name: extract-version
    runs-on: ubuntu-latest
    outputs:
      latest_tagged_version: ${{ steps.tag.outputs.version }}
      version: ${{ steps.version.outputs.version }}
    steps:
      - uses: actions/checkout@v3
      - name: Extract version
        id: "version"
        run: |
          echo "::set-output name=version::$(cat Cargo.toml | grep version | head -1 | awk -F '"' '{ print $2 }')"
      - name: Extract last tagged version
        id: "tag"
        run: |
          echo "::set-output name=version::$(git tag | grep -E '^v[0-9]' | sort -V | tail -1 | cut -b 2-7)"
  create-release:
    name: create-release
    needs: ["extract-version"]
    runs-on: ubuntu-latest
    if: ${{ needs.extract-version.outputs.version != needs.extract-version.latest_tagged_version }}
    outputs:
      sha256: ${{ steps.hash.outputs.sha256 }}
    steps:
      - uses: actions/checkout@v3
      - name: Create release
        run: |
          gh release create v${{ needs.extract-version.outputs.version }} \
            -t v${{ needs.extract-version.outputs.version }} \
            --target $(git rev-list --max-count=1 HEAD) \
            --generate-notes
        continue-on-error: true
      - name: Extract archive hash
        id: "hash"
        run: |
          gh release download v${{ needs.extract-version.outputs.version }} --archive=tar.gz
          echo "::set-output name=sha256::$(shasum -a 256 git-annex-archiver-${{ needs.extract-version.outputs.version }}.tar.gz | cut -d " " -f 1)"
  upload-assets:
    needs: ["extract-version", "create-release"]
    strategy:
      matrix:
        include:
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
          - target: aarch64-apple-darwin
            os: macos-latest
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          - os: windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            libgtk-3-dev libxdo-dev libappindicator3-dev
      - uses: taiki-e/upload-rust-binary-action@v1
        with:
          bin: git-annex-archiver
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: refs/tags/v${{ needs.extract-version.outputs.version }}
  commit-git-annex-archiver-homebrew-formula:
    name: commit-git-annex-archiver-homebrew-formula
    needs: ["extract-version", "create-release"]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: ksesong/homebrew-git-annex-archiver
          token: ${{ secrets.REPOSITORY_ACCESS_TOKEN }}
      - run: |
          tee git-annex-archiver.rb << END
          class GitAnnexArchiver < Formula
            desc "Coordinates typical git-annex routines."
            homepage "https://github.com/ksesong/git-annex-archiver"
            url "https://github.com/ksesong/git-annex-archiver/archive/refs/tags/v${{ needs.extract-version.outputs.version }}.tar.gz"
            sha256 "${{ needs.create-release.outputs.sha256 }}"

            depends_on "rust" => :build

            def install
              system "cargo", "build", "--release", "--bin", "git-annex-archiver"
              bin.install "target/release/git-annex-archiver"
            end

            service do
              run opt_bin/"git-annex-archiver"
              environment_variables PATH: std_service_path_env
              process_type :interactive
              keep_alive crashed: true
            end

            test do
              assert_equal "version: ${{ needs.extract-version.outputs.version }}", shell_output("#{bin}/git-annex-archiver --version").strip
            end
          end
          END
          git add .
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions"
          git commit -m "chore: update brew formula (${{ needs.extract-version.outputs.version }})" -a
        continue-on-error: true
      - uses: ad-m/github-push-action@master
        with:
          repository: ksesong/homebrew-git-annex-archiver
          github_token: ${{ secrets.REPOSITORY_ACCESS_TOKEN }}
          branch: main
        continue-on-error: true